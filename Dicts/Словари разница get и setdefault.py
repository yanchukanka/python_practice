# get с сущест. ключом сохранит прежнее значение, с несущест. ключом ничего не произойдет
d = {"a": 1,
     "b": 2,
     "c": 3}
d.get("a", 28)  # ключ есть в словаре
d.get("d", 28)  # ключа нет в словаре
print(d)  # {'a': 1, 'b': 2, 'c': 3}

# get с существ. ключом при попытке получить значение по ключу сохранит прежнее значение,
# новое не будет присвоено
# а при обращении к несуществ ключу через get с заданным знач по дефолту, создаст новую пару ключ:знач
d = {"a": 1,
     "b": 2,
     "c": 3}
d["a"] = d.get("a", 28) #ключ есть в словаре
d["d"] = d.get("d", 28) #ключа нет в словаре
print(d)  # {'a': 1, 'b': 2, 'c': 3, 'd': 28}

# setdefault() позволяет получить значение из словаря по заданному ключу, автоматически добавляя
# элемент словаря, если он отсутствует
d = {"a": 1,
     "b": 2,
     "c": 3}
d.setdefault("a", 28) #ключ есть в словаре
d.setdefault("d", 28) #ключа нет в словаре
print(d)  #{'a': 1, 'b': 2, 'c': 3, 'd': 28}


d = {"a": 1,
     "b": 2,
     "c": 3}
d["a"] = d.setdefault("a", 28) #ключ есть в словаре
d["d"] = d.setdefault("d", 28) #ключа нет в словаре
print(d)  # {'a': 1, 'b': 2, 'c': 3, 'd': 28}